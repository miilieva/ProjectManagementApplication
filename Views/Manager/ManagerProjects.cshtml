@{
    ViewData["Title"] = "Projects";
}

<div class="container mt-5">
    <h2 class="text-center mb-4">Projects</h2>

    <div class="table-responsive">
        <table class="table table-hover table-bordered mx-auto" style="max-width: 100%;">
            <thead class="thead-dark">
                <tr>
                    <th>Project ID</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Start Date</th>
                    <th>End Date</th>
                    <th>Team ID</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="projects-body">
            </tbody>
        </table>
    </div>

    <div class="d-flex justify-content-between mt-4">
        <a href="/Projects/create" class="btn btn-success">Create New Project</a>
        <a href="javascript:history.back()" class="btn btn-secondary">Back</a>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', async () => {
            try {
                console.log('Fetching projects...');

                const response = await fetch('/Manager/projects', {
                    method: 'GET'
                });

                console.log('Response Status:', response.status);

                if (response.ok) {
                    const projects = await response.json();
                    console.log('Projects:', projects);

                    const projectsBody = document.getElementById('projects-body');
                    projectsBody.innerHTML = projects.map(project => `
                                <tr>
                                    <td>${project.projectId}</td>
                                    <td>${project.name}</td>
                                    <td>${project.description}</td>
                                    <td>${new Date(project.startDate).toLocaleDateString()}</td>
                                    <td>${new Date(project.endDate).toLocaleDateString()}</td>
                                    <td>${project.teamId}</td>
                                    <td>
                                        <div class="d-flex justify-content-start gap-2">
                                            <a href="/Projects/edit/${project.projectId}" class="btn btn-warning btn-sm">Edit</a>
                                            <button class="btn btn-danger btn-sm" onclick="deleteProject(${project.projectId})">Delete</button>
                                            <a href="/Manager/view-comments/${project.projectId}" class="btn btn-info btn-sm">View Comments</a>
                                        </div>
                                    </td>
                                </tr>
                            `).join('');
                } else {
                    console.error('Failed to load projects:', response.statusText);
                }
            } catch (error) {
                console.error('Error fetching projects:', error);
            }
        });

        async function deleteProject(projectId) {
            if (!confirm('Are you sure you want to delete this project?')) {
                return;
            }

            try {
                const response = await fetch(`/Projects/delete/${projectId}`, {
                    method: 'DELETE'
                });

                console.log('Response Status:', response.status);

                if (response.ok) {
                    alert('Project deleted successfully.');
                    document.dispatchEvent(new Event('DOMContentLoaded'));
                } else {
                    console.error('Failed to delete project:', response.statusText);
                    alert('Failed to delete project.');
                }
            } catch (error) {
                console.error('Error deleting project:', error);
                alert('Error deleting project.');
            }
        }
    </script>
}
